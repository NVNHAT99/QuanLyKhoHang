/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.BLL_Permissions;
import BLL.BLL_Role;
import DTO.DTO_Permissions;
import DTO.DTO_Role;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import ultils.CustomCombo;

/**
 *
 * @author Nhat
 */
public class GUI_Insert_Update_Role extends javax.swing.JFrame {

    /**
     * Creates new form GUI_Insert_Update_Role
     */
    static CustomCombo RoleUpdate = null;
    static BLL_Role bLL_Role = new BLL_Role();
    static BLL_Permissions bLL_Permissions = new BLL_Permissions();
    static GUI_Role gUI_Role = null;

    public GUI_Insert_Update_Role(CustomCombo Role,GUI_Role gui_role) throws SQLException {
        initComponents();
        RoleUpdate = Role;
        gUI_Role = gui_role;
        LoadRoleDetailDefault();
        DefaultTableModel model = (DefaultTableModel) Table_RoleDetail.getModel();
        if (RoleUpdate == null) {
            for (int i = 0; i < 8; i++) {
                model.addRow(new Object[]{"", i + 1, false, false, false, false});
            }
        } else {
            txt_RoleName.setText(Role.getLabel());
            DTO_Role GetFullInfoRole = bLL_Role.SelectRole(Role.getID());
            txt_Description.setText(GetFullInfoRole.getDescription());

            ArrayList<DTO_Permissions> permissionses = bLL_Permissions.GetPermissionsByRoleId(Role.getID());
            model.setRowCount(0);
            for (int i = 0; i < 8; i++) {
                model.addRow(new Object[]{Role.getID(), i + 1, permissionses.get(i).isAllowInsert(), permissionses.get(i).isAllowSelect(),
                    permissionses.get(i).isAllowUpdate(), permissionses.get(i).isAllowDelete()});
            }
        }
    }

    public void LoadRoleDetailDefault() {

        String[] columnNames = new String[]{" RoleId ", " Model ", "AllowInsert", "AllowSelect", "AllowUpdate", "AllowDelete"};
        DefaultTableModel model = new DefaultTableModel(null, columnNames) {
            @Override
            public Class getColumnClass(int columnIndex) {
                if (columnIndex != 0 && columnIndex != 1) {
                    return Boolean.class;
                } else {
                    return Integer.class;
                }
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 0 || column == 1) {
                    return false;
                } else {
                    return true;
                }
            }
        };
        Table_RoleDetail.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_RoleName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Description = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_RoleDetail = new javax.swing.JTable();
        btn_Save = new javax.swing.JButton();
        btn_Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Insert New Role");

        jLabel2.setText("Role Name:");

        txt_Description.setColumns(20);
        txt_Description.setRows(5);
        jScrollPane1.setViewportView(txt_Description);

        jLabel3.setText("Note Role");

        Table_RoleDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Table_RoleDetail);

        btn_Save.setText("Save");
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        btn_Cancel.setText("Cancel");
        btn_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_RoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1))
                            .addComponent(jLabel1)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Save)
                .addGap(40, 40, 40)
                .addComponent(btn_Cancel)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txt_RoleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Save)
                    .addComponent(btn_Cancel))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:
        DTO_Role NewRole = new DTO_Role();
        String RoleName = "";
        String Depscription = "";
        try {
            RoleName = txt_RoleName.getText();
            Depscription = txt_Description.getText();
        } catch (Exception e) {
        }
        NewRole.setName(RoleName);
        NewRole.setDescription(Depscription);
        ArrayList<DTO_Permissions> permissionses = new ArrayList<DTO_Permissions>();
        for (int i = 0; i < 8; i++) {
            DTO_Permissions Each_permission = new DTO_Permissions();
            Each_permission.setModelId(i + 1);
            Each_permission.setAllowInsert((boolean) Table_RoleDetail.getValueAt(i, 2));
            Each_permission.setAllowSelect((boolean) Table_RoleDetail.getValueAt(i, 3));
            Each_permission.setAllowUpdate((boolean) Table_RoleDetail.getValueAt(i, 4));
            Each_permission.setAllowDelete((boolean) Table_RoleDetail.getValueAt(i, 5));
            permissionses.add(Each_permission);
        }
        if (RoleUpdate == null) {
            //insert here

            try {
                bLL_Role.InsertNewRoleWithPermission(NewRole, permissionses);
            } catch (SQLException ex) {
                Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            // update here
            NewRole.setId(RoleUpdate.getID());
            try {
                bLL_Role.UpdateRoleWithPermission(NewRole, permissionses);
            } catch (SQLException ex) {
                Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        try {
            gUI_Role.LoadListRole();
            gUI_Role.Setdefault();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btn_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btn_CancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUI_Insert_Update_Role(RoleUpdate,gUI_Role).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GUI_Insert_Update_Role.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_RoleDetail;
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txt_Description;
    private javax.swing.JTextField txt_RoleName;
    // End of variables declaration//GEN-END:variables
}
